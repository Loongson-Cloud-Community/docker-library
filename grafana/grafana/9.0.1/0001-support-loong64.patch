diff --git a/Dockerfile b/Dockerfile
index 3bee987..cce446d 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -1,26 +1,17 @@
-FROM node:16-alpine3.15 as js-builder
+ARG BASE_IMAGE=lcr.loongnix.cn/library/alpine:3.19
+#ARG JS_IMAGE=node:16-alpine3.15
+ARG JS_IMAGE=docker.m.daocloud.io/grafana/grafana:9.0.1
+ARG JS_PLATFORM=linux/amd64
 
-ENV NODE_OPTIONS=--max_old_space_size=8000
+FROM --platform=${JS_PLATFORM}  ${JS_IMAGE} as js-builder
 
-WORKDIR /grafana
-
-COPY package.json yarn.lock .yarnrc.yml ./
-COPY .yarn .yarn
-COPY packages packages
-COPY plugins-bundled plugins-bundled
-
-RUN yarn install
-
-COPY tsconfig.json .eslintrc .editorconfig .browserslistrc .prettierrc.js babel.config.json .linguirc ./
-COPY public public
-COPY tools tools
-COPY scripts scripts
-COPY emails emails
+ARG GOPROXY
+ARG GO_IMAGE=lcr.loongnix.cn/library/golang:1.20-alpine
 
-ENV NODE_ENV production
-RUN yarn build
+#FROM ${GO_IMAGE} as go-builder
+FROM lcr.loongnix.cn/library/golang:1.20-alpine as go-builder
 
-FROM golang:1.17.11-alpine3.15 as go-builder
+ARG GOPROXY=https://goproxy.cn
 
 RUN apk add --no-cache gcc g++ make
 
@@ -37,12 +28,12 @@ COPY cue.mod cue.mod
 COPY .bingo .bingo
 
 RUN go mod verify
-RUN make build-go
+RUN go get github.com/mattn/go-sqlite3 &&  make build-go
 
 # Final stage
-FROM alpine:3.15
+FROM ${BASE_IMAGE}
 
-LABEL maintainer="Grafana team <hello@grafana.com>"
+LABEL maintainer="Zhaixiaojuan <zhaixiaojuan@loongson.cn>"
 
 ARG GF_UID="472"
 ARG GF_GID="0"
@@ -58,8 +49,8 @@ ENV PATH="/usr/share/grafana/bin:$PATH" \
 WORKDIR $GF_PATHS_HOME
 
 RUN apk add --no-cache ca-certificates bash tzdata musl-utils
-RUN apk add --no-cache openssl ncurses-libs ncurses-terminfo-base --repository=http://dl-cdn.alpinelinux.org/alpine/edge/main
-RUN apk upgrade ncurses-libs ncurses-terminfo-base --repository=http://dl-cdn.alpinelinux.org/alpine/edge/main
+RUN apk add --no-cache openssl ncurses-libs ncurses-terminfo-base
+RUN apk upgrade ncurses-libs ncurses-terminfo-base
 RUN apk info -vv | sort
 
 COPY conf ./conf
@@ -85,8 +76,9 @@ RUN export GF_GID_NAME=$(getent group $GF_GID | cut -d':' -f1) && \
   chmod -R 777 "$GF_PATHS_DATA" "$GF_PATHS_HOME/.aws" "$GF_PATHS_LOGS" "$GF_PATHS_PLUGINS" "$GF_PATHS_PROVISIONING"
 
 COPY --from=go-builder /grafana/bin/*/grafana-server /grafana/bin/*/grafana-cli ./bin/
-COPY --from=js-builder /grafana/public ./public
-COPY --from=js-builder /grafana/tools ./tools
+COPY --from=js-builder /usr/share/grafana/public ./public
+#COPY --from=go-builder /grafana/LICENSE ./
+#COPY --from=js-builder /grafana/tools ./tools
 
 EXPOSE 3000
 
diff --git a/Makefile b/Makefile
index 12cd5e7..389a9ef 100644
--- a/Makefile
+++ b/Makefile
@@ -150,7 +150,7 @@ shellcheck: $(SH_FILES) ## Run checks for shell scripts.
 
 build-docker-full: ## Build Docker image for development.
 	@echo "build docker container"
-	docker build --tag grafana/grafana:dev .
+	docker build --tag lcr.loongnix.cn/grafana/grafana:9.0.1 .
 
 build-docker-full-ubuntu: ## Build Docker image based on Ubuntu for development.
 	@echo "build docker container"
